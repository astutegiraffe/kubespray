apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-oci-node-sa
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-oci
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["volume.oci.oracle.com"]
    resources: ["blockscsiinfos"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update", "create"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "volumeattachments", "csinodes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "watch", "create", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-oci-binding
subjects:
  - kind: ServiceAccount
    name: csi-oci-node-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-oci
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
  generation: 1
  name: csi-oci-controller
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: csi-oci-controller
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: csi-oci-controller
        role: csi-oci
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      containers:
        - name: csi-volume-provisioner
          image: quay.io/k8scsi/csi-provisioner:v1.6.0
          args:
            - --csi-address=/var/run/shared-tmpfs/csi.sock
            - --volume-name-prefix=csi
            - --feature-gates=Topology=true
            - --timeout=120s
            - --enable-leader-election=true
            - --leader-election-type=leases
            - --leader-election-namespace=kube-system
          volumeMounts:
            - name: config
              mountPath: /etc/oci/config.yaml
              subPath: cloud-provider.yaml
              readOnly: true
            - mountPath: /var/run/shared-tmpfs
              name: shared-tmpfs
        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v2.2.0
          args:
            - --csi-address=/var/run/shared-tmpfs/csi.sock
            - --timeout=120s
            - --leader-election=true
            - --leader-election-namespace=kube-system
          volumeMounts:
            - name: config
              mountPath: /etc/oci/config.yaml
              subPath: cloud-provider.yaml
              readOnly: true
            - mountPath: /var/run/shared-tmpfs
              name: shared-tmpfs
        - name: oci-csi-controller-driver
          args:
            - --v=2
            - --endpoint=unix://var/run/shared-tmpfs/csi.sock
          command:
            - /usr/local/bin/oci-csi-controller-driver
          image: {{oci_cloud_controller_pull_source}}:{{oci_cloud_controller_version}}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /etc/oci/config.yaml
              subPath: cloud-provider.yaml
              readOnly: true
            - name: kubernetes
              mountPath: /etc/kubernetes
              readOnly: true
            - mountPath: /var/run/shared-tmpfs
              name: shared-tmpfs
      volumes:
        - name: config
          secret:
            secretName: oci-cloud-controller-manager
        - name: kubernetes
          hostPath:
            path: /etc/kubernetes
        - name: shared-tmpfs
          emptyDir: {}
      dnsPolicy: ClusterFirst
      hostNetwork: true
      imagePullSecrets:
        - name: image-pull-secret
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: csi-oci-node-sa
      serviceAccountName: csi-oci-node-sa
      terminationGracePeriodSeconds: 30
      tolerations:
        - operator: Exists
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: oci-csi-iscsiadm
  namespace: kube-system
data:
  iscsiadm: |
    #!/bin/sh
    if [ -x /host/sbin/iscsiadm ]; then
      chroot /host /sbin/iscsiadm "$@"
    elif [ -x /host/usr/local/sbin/iscsiadm ]; then
      chroot /host /usr/local/sbin/iscsiadm "$@"
    elif [ -x /host/bin/iscsiadm ]; then
      chroot /host /bin/iscsiadm "$@"
    elif [ -x /host/usr/local/bin/iscsiadm ]; then
      chroot /host /usr/local/bin/iscsiadm "$@"
    else
      chroot /host iscsiadm "$@"
    fi
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
  generation: 1
  name: csi-oci-node
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: csi-oci-node
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: csi-oci-node
        role: csi-oci
    spec:
      containers:
        - name: oci-csi-node-driver
          args:
            - --v=2
            - --endpoint=unix:///csi/csi.sock
            - --nodeid=$(KUBE_NODE_NAME)
            - --loglevel=debug
          command:
            - /usr/local/bin/oci-csi-node-driver
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/host/usr/bin:/host/sbin
          image: {{oci_cloud_controller_pull_source}}:{{oci_cloud_controller_version}}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: pods-mount-dir
            - mountPath: /dev
              name: device-dir
            - mountPath: /registration
              name: registration-dir
            - mountPath: /host
              name: host-root
            - mountPath: /sbin/iscsiadm
              name: chroot-iscsiadm
              subPath: iscsiadm
        - name: csi-node-registrar
          args:
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/blockvolume.csi.oraclecloud.com/csi.sock
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.0.2
          securityContext:
            privileged: true
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - rm -rf /registration/blockvolume.csi.oraclecloud.com /registration/blockvolume.csi.oraclecloud.com-reg.sock
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: pods-mount-dir
            - mountPath: /dev
              name: device-dir
            - mountPath: /registration
              name: registration-dir
      dnsPolicy: ClusterFirst
      hostNetwork: true
      imagePullSecrets:
        - name: image-pull-secret
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: csi-oci-node-sa
      serviceAccountName: csi-oci-node-sa
      terminationGracePeriodSeconds: 30
      tolerations:
        - operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/blockvolume.csi.oraclecloud.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /dev
            type: ""
          name: device-dir
        - hostPath:
            path: /
            type: Directory
          name: host-root
        - configMap:
            name: oci-csi-iscsiadm
            defaultMode: 0755
          name: chroot-iscsiadm
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: oci-bv
provisioner: blockvolume.csi.oraclecloud.com
volumeBindingMode: {{ oci_csi_volume_binding_mode }}
reclaimPolicy: Delete
allowedTopologies:
- matchLabelExpressions:
  - key: failure-domain.beta.kubernetes.io/zone
    values:
{% for zone in oci_csi_allowed_topology_zones %}
    - {{ zone }}
{% endfor %}
